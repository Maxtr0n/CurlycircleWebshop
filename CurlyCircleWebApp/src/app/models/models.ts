//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

export interface CartItemUpsertDto {
    cartId: number;
    productId: number;
    price: number;
    quantity: number;
}

export interface CartItemViewModel {
    id: number;
    cartId: number;
    productId: number;
    product: Product;
    price: number;
    quantity: number;
}

export interface CartItemsViewModel {
    cartItems: CartItemViewModel[];
}

export interface CartViewModel {
    id: number;
    cartItems: CartItemViewModel[];
}

export interface ChangePasswordDto {
    email: string;
    id: string;
    oldPassword: string;
    newPassword: string;
}

export enum Color {
    Red,
    Blue,
    Green,
    Yellow,
    White,
    Black,
    Orange,
    Pink,
    Other,
}

export interface EntityCreatedViewModel {
    id: number;
}

export interface LoginDto {
    email: string;
    password: string;
    cartId: number;
}

export enum Material {
    Fabric,
    Plastic,
    Metal,
    Other,
}

export interface Order {
    id: number;
    orderDateTime: Date;
    orderItems: OrderItem[];
    firstName: string;
    lastName: string;
    email: string;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string;
    note: string;
}

export interface OrderAddress {
    city: string;
    zipCode: string;
    line1: string;
    line2: string;
    order: Order;
    orderId: number;
}

export interface OrderItem {
    id: number;
    order: Order;
    orderId: number;
    product: Product;
    productId: number;
    price: number;
    quantity: number;
}

export interface OrderItemUpsertDto {
    orderId: number;
    productId: number;
    price: number;
    quantity: number;
}

export interface OrderItemViewModel {
    id: number;
    orderId: number;
    productId: number;
    product: Product;
    price: number;
    quantity: number;
}

export interface OrderItemsViewModel {
    orderItems: OrderItemViewModel[];
}

export interface OrderUpsertDto {
    orderDateTime: Date;
    orderItems: OrderItemUpsertDto[];
    name: string;
    email: string;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string;
    note: string;
}

export interface OrderViewModel {
    id: number;
    orderDateTime: Date;
    orderItems: OrderItemViewModel[];
    firstName: string;
    lastName: string;
    email: string;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string;
    note: string;
}

export interface OrdersViewModel {
    orders: OrderViewModel[];
}

export enum Pattern {
    Blank,
    Dotted,
    Striped,
    Checkered,
    Other,
}

export enum PaymentMethod {
    MoneyTransfer,
    CashOnDelivery,
    WebPayment,
}

export interface Product {
    id: number;
    price: number;
    name: string;
    productCategory: ProductCategory;
    productCategoryId: number;
    description: string;
    imageUrl: string;
    color: Color;
    pattern: Pattern;
    material: Material;
}

export interface ProductCategoriesViewModel {
    productCategories: ProductCategoryViewModel[];
}

export interface ProductCategory {
    id: number;
    name: string;
    description: string;
    products: Product[];
}

export interface ProductCategoryUpsertDto {
    name: string;
    description: string;
    productIds: number[];
}

export interface ProductCategoryViewModel {
    id: number;
    name: string;
    description: string;
}

export interface ProductUpsertDto {
    price: number;
    name: string;
    productCategoryId: number;
    description: string;
    imageUrl: string;
    color: string;
    pattern: string;
    material: string;
}

export interface ProductViewModel {
    id: number;
    price: number;
    name: string;
    productCategoryId: number;
    description: string;
    imageUrl: string;
    color: Color;
    pattern: Pattern;
    material: Material;
}

export interface ProductsViewModel {
    products: ProductViewModel[];
}

export interface RefreshDto {
    email: string;
    id: number;
    accessToken: string;
    refreshToken: string;
}

export interface RegisterDto {
    email: string;
    firstName: string;
    lastName: string;
    readonly city: string;
    readonly zipCode: string;
    readonly line1: string;
    readonly line2: string;
    phoneNumber: string;
    password: string;
}

export interface RevokeDto {
    email: string;
    id: number;
}

export enum Role {
    User,
    Admin,
}

export enum ShippingMethod {
    Foxpost,
    MagyarPostaPont,
    MagyarPostaCsomagPont,
    HomeDelivery,
    PersonalDelivery,
}

export interface TokenViewModel {
    accessToken: string;
    refreshToken: string;
}

export interface UserUpdateDto {
    userId: number;
    email: string;
    firstName: string;
    lastName: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string;
    phoneNumber: string;
}

export interface UserViewModel {
    id: number;
    cartId: number;
    email: string;
    role: Role;
    token: TokenViewModel;
}
