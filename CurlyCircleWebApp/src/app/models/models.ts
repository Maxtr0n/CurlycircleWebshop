//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming


export interface CartItemUpsertDto {
    cartId: number;
    productId: number;
    price: number;
    quantity: number;
}

export interface CartItemViewModel {
    id: number;
    cartId: number;
    productId: number;
    product: Product;
    price: number;
    quantity: number;
}

export interface CartItemsViewModel {
    cartItems: CartItemViewModel[] | undefined;
}

export interface CartViewModel {
    id: number;
    cartItems: CartItemViewModel[] | undefined;
}

export interface ChangePasswordDto {
    email: string | undefined;
    id: string | undefined;
    oldPassword: string | undefined;
    newPassword: string | undefined;
}

export enum Color {
    Red,
    Blue,
    Green,
    Yellow,
    White,
    Black,
    Orange,
    Pink,
    Other
}

export interface EntityCreatedViewModel {
    id: number;
}

export interface LoginDto {
    email: string | undefined;
    password: string | undefined;
    cartId: number | undefined;
}

export enum Material {
    Fabric,
    Plastic,
    Metal,
    Other
}

export interface Order {
    id: number;
    orderDateTime: Date;
    orderItems: OrderItem[] | undefined;
    firstName: string | undefined;
    lastName: string | undefined;
    email: string | undefined;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string | undefined;
    note: string | undefined;
}

export interface OrderAddress {
    city: string | undefined;
    zipCode: string | undefined;
    line1: string | undefined;
    line2: string | undefined;
    order: Order;
    orderId: number;
}

export interface OrderItem {
    id: number;
    order: Order;
    orderId: number;
    product: Product;
    productId: number;
    price: number;
    quantity: number;
}

export interface OrderItemUpsertDto {
    orderId: number;
    productId: number;
    price: number;
    quantity: number;
}

export interface OrderItemViewModel {
    id: number;
    orderId: number;
    productId: number;
    product: Product;
    price: number;
    quantity: number;
}

export interface OrderItemsViewModel {
    orderItems: OrderItemViewModel[] | undefined;
}

export interface OrderUpsertDto {
    orderDateTime: Date;
    orderItems: OrderItemUpsertDto[] | undefined;
    name: string | undefined;
    email: string | undefined;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string | undefined;
    note: string | undefined;
}

export interface OrderViewModel {
    id: number;
    orderDateTime: Date;
    orderItems: OrderItemViewModel[] | undefined;
    firstName: string | undefined;
    lastName: string | undefined;
    email: string | undefined;
    address: OrderAddress;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string | undefined;
    note: string | undefined;
}

export interface OrdersViewModel {
    orders: OrderViewModel[] | undefined;
}

export enum Pattern {
    Blank,
    Dotted,
    Striped,
    Checkered,
    Other
}

export enum PaymentMethod {
    MoneyTransfer,
    CashOnDelivery,
    WebPayment
}

export interface Product {
    id: number;
    price: number;
    name: string | undefined;
    productCategory: ProductCategory;
    productCategoryId: number;
    description: string | undefined;
    imageUrl: string | undefined;
    color: Color;
    pattern: Pattern;
    material: Material;
}

export interface ProductCategoriesViewModel {
    productCategories: ProductCategoryViewModel[] | undefined;
}

export interface ProductCategory {
    id: number;
    name: string | undefined;
    description: string | undefined;
    products: Product[] | undefined;
}

export interface ProductCategoryUpsertDto {
    name: string | undefined;
    description: string | undefined;
    productIds: number[] | undefined;
}

export interface ProductCategoryViewModel {
    id: number;
    name: string | undefined;
    description: string | undefined;
}

export interface ProductUpsertDto {
    price: number;
    name: string | undefined;
    productCategoryId: number;
    description: string | undefined;
    imageUrl: string | undefined;
    color: string | undefined;
    pattern: string | undefined;
    material: string | undefined;
}

export interface ProductViewModel {
    id: number;
    price: number;
    name: string | undefined;
    productCategoryId: number;
    description: string | undefined;
    imageUrl: string | undefined;
    color: Color;
    pattern: Pattern;
    material: Material;
}

export interface ProductsViewModel {
    products: ProductViewModel[] | undefined;
}

export interface RefreshDto {
    email: string | undefined;
    id: number;
    accessToken: string | undefined;
    refreshToken: string | undefined;
}

export interface RegisterDto {
    email: string | undefined;
    firstName: string | undefined;
    lastName: string | undefined;
    readonly city: string | undefined;
    readonly zipCode: string | undefined;
    readonly line1: string | undefined;
    readonly line2: string | undefined;
    phoneNumber: string | undefined;
    password: string | undefined;
}

export interface RevokeDto {
    email: string | undefined;
    id: number;
}

export enum Role {
    User,
    Admin
}

export enum ShippingMethod {
    Foxpost,
    MagyarPostaPont,
    MagyarPostaCsomagPont,
    HomeDelivery,
    PersonalDelivery
}

export interface TokenViewModel {
    accessToken: string | undefined;
    refreshToken: string | undefined;
}

export interface UserUpdateDto {
    userId: number;
    email: string | undefined;
    firstName: string | undefined;
    lastName: string | undefined;
    city: string | undefined;
    zipCode: string | undefined;
    line1: string | undefined;
    line2: string | undefined;
    phoneNumber: string | undefined;
}

export interface UserViewModel {
    id: number;
    cartId: number;
    email: string | undefined;
    role: Role;
    token: TokenViewModel;
}