//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.10.0 (NJsonSchema v10.6.10.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming

export interface CartItemUpsertDto {
    productId: number;
    price: number;
    quantity: number;
}

export interface CartItemViewModel {
    id: number;
    cartId: number;
    productId: number;
    product: ProductViewModel;
    price: number;
    quantity: number;
}

export interface CartItemsViewModel {
    cartItems: CartItemViewModel[];
}

export interface CartViewModel {
    id: number;
    cartItems: CartItemViewModel[];
}

export interface LocalCart {
    id: number;
    isAnonymous: boolean;
}

export interface ChangePasswordDto {
    email: string;
    oldPassword: string;
    newPassword: string;
}

export interface DeleteUserDto {
    id: number;
    password: string;
}

export interface EntityCreatedViewModel {
    id: number;
}

export interface LoginDto {
    email: string;
    password: string;
    cartId: number | null;
}

export interface OrderAddressViewModel {
    orderId: number;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
}

export interface OrderItemViewModel {
    id: number;
    orderId: number;
    productId: number;
    product: ProductViewModel;
    price: number;
    quantity: number;
}

export interface OrderItemsViewModel {
    orderItems: OrderItemViewModel[] | null;
}

export interface OrderUpsertDto {
    cartId: number;
    applicationUserId: number | null;
    firstName: string;
    lastName: string;
    email: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string;
    note: string | null;
}

export interface OrderViewModel {
    id: number;
    orderDateTime: Date;
    userId: number | null;
    orderItems: OrderItemViewModel[];
    firstName: string;
    lastName: string;
    email: string;
    zipCode: string;
    city: string;
    line1: string;
    line2: string | null;
    total: number;
    shippingMethod: ShippingMethod;
    paymentMethod: PaymentMethod;
    phoneNumber: string;
    note: string | null;
}

export interface OrdersViewModel {
    orders: OrderViewModel[];
}

export interface PagedOrdersViewModel {
    orders: OrderViewModel[];
    pageIndex: number;
    pageSize: number;
    totalCount: number;
    totalPages: number;
    hasPreviousPage: boolean;
    hasNextPage: boolean;
}

export interface PagedProductsViewModel {
    products: ProductViewModel[];
    pageIndex: number;
    pageSize: number;
    totalCount: number;
    totalPages: number;
    hasPreviousPage: boolean;
    hasNextPage: boolean;
}

export interface OrderQueryParameters {
    pageIndex: number;
    pageSize: number;
    orderId: string | null;
    sortDirection: string;
    minOrderDate: string | null;
    maxOrderDate: string | null;
}

export interface ProductQueryParameters {
    pageIndex: number;
    pageSize: number;
    productCategoryId: number | null;
    colorIds: number[];
    patternIds: number[];
    materialIds: number[];
    minPrice: number | null;
    maxPrice: number | null;
}

export enum PaymentMethod {
    MoneyTransfer,
    CashOnDelivery,
    WebPayment,
}

export interface ProductCategoriesViewModel {
    productCategories: ProductCategoryViewModel[];
}

export interface ProductCategoryUpsertDto {
    name: string;
    description: string | null;
}

export interface ProductCategoryWithThumbnail {
    name: string;
    description: string | null;
    thumbnailImage: File | null;
}

export interface ProductCategoryViewModel {
    id: number;
    name: string;
    description: string | null;
    thumbnailImageUrl: string;
    isAvailable: boolean;
}

export interface ProductUpsertDto {
    price: number;
    name: string;
    productCategoryId: number;
    description: string | null;
    colorIds: number[];
    patternId: number;
    materialId: number;
    isAvailable: boolean;
}

export interface ProductWithImages {
    price: number;
    name: string;
    productCategoryId: number;
    description: string | null;
    productImages: File[];
    thumbnailImage: File | null;
    colorIds: number[];
    patternId: number | null;
    materialId: number | null;
    isAvailable: boolean;
}

export interface ProductViewModel {
    id: number;
    price: number;
    name: string;
    productCategoryId: number;
    description: string | null;
    imageUrls: string[];
    thumbnailImageUrl: string;
    colors: ColorViewModel[];
    pattern: PatternViewModel | null;
    material: MaterialViewModel | null;
    isAvailable: boolean;
}

export interface ProductsViewModel {
    products: ProductViewModel[];
}

export interface RefreshDto {
    email: string;
    id: number;
    accessToken: string;
    refreshToken: string;
}

export interface RegisterDto {
    email: string;
    firstName: string;
    lastName: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
    phoneNumber: string;
    password: string;
}

export interface RevokeDto {
    email: string;
    id: number;
}

export enum Role {
    User,
    Admin,
}

export enum ShippingMethod {
    Foxpost,
    MagyarPostaPont,
    MagyarPostaCsomagPont,
    HomeDelivery,
    PersonalDelivery,
}

export interface TokenViewModel {
    accessToken: string;
    refreshToken: string;
}

export interface UserUpdateDto {
    userId: number;
    email: string | null;
    firstName: string;
    lastName: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
    phoneNumber: string;
}

export interface UserViewModel {
    id: number;
    cartId: number;
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
    role: Role;
    accessToken: string;
    refreshToken: string;
}

export interface UserDataViewModel {
    email: string;
    firstName: string;
    lastName: string;
    phoneNumber: string;
    city: string;
    zipCode: string;
    line1: string;
    line2: string | null;
}

export interface ColorViewModel {
    id: number;
    name: string;
}

export interface ColorsViewModel {
    colors: ColorViewModel[];
}

export interface PatternViewModel {
    id: number;
    name: string;
}

export interface PatternsViewModel {
    patterns: PatternViewModel[];
}

export interface MaterialViewModel {
    id: number;
    name: string;
}

export interface MaterialsViewModel {
    materials: MaterialViewModel[];
}


export interface ColorUpsertDto {
    name: string;
}

export interface PatternUpsertDto {
    name: string;
}

export interface MaterialUpsertDto {
    name: string;
}

